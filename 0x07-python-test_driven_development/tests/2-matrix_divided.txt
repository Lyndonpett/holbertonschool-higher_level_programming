Import ''matrix_divided'' from ''2-matrix_divided'' module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

POSITIVE NUMBERS WITH POSITIVE DIV
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

NEGATIVE NUMBERS WITH NEGATIVE DIV
	>>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], -3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

ONE FLOAT IN MATRIX AND NEGATIVE DIV
	>>> matrix_divided([[15.7]], -2)
	[[-7.85]]

FLOATS IN MATRIX AND POSITIVE DIV
	>>> matrix_divided([[1.56, 3.25, 1.89], [1.73, 1.62, 1.88]], 3)
	[[0.52, 1.08, 0.63], [0.58, 0.54, 0.63]]

INTS IN MATRIX AND CHAR IN DIV SPOT
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

INTS IN MATRIX AND DIV AS 0
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

DIFFERENT MATRIX SIZED
	>>> matrix_divided([[1, 2], [3, 4, 5]], 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

STRING IN MATRIX
    >>> matrix_divided([["holberton"], ["school"]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

NO AGRUMENT TO DIV
	>>> matrix_divided([[1, 2, 3]], [4, 5, 6])
	Traceback (most recent call last):
	...
	TypeError: div must be a number

PASSING INF
	>>> matrix_divided([[[1, 2, 3]], [4, 8, 7, 9]], float('inf'))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

PASSING NO ARGUMENTS
	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

PASSING ONE AGRUMENT
	>>> matrix_divided([[1, 2, 3]])
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided([[1, 2], [3, 4]], float('inf'))
	[[0.0, 0.0], [0.0, 0.0]]